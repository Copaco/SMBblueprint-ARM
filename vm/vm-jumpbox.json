{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vm": {
            "type": "object",
            "metadata": {
                "description": "The Active Directory Domain Services VM. The parameter should contain the following properties;Name, virtualNetworkName, virtualNetworkSubnetName and the username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password"
            }
        },
        "domainAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The domain admin password"
            }
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "the workspacename"
            }
        },
        "baseTemplateUri": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersion": {
            "network": {
                "virtualNetwork": "2016-03-30",
                "networkSecurityGroups": "2016-03-30",
                "publicIPAddresses": "2016-03-30",
                "networkInterfaces": "2016-03-30"
            },
            "storage": {
                "storageAccounts": "2016-01-01"
            },
            "compute": {
                "virtualMachines": "2016-04-30-preview"
            },
            "management":{
                "monitoring":"2015-06-15"
            }
        },
        "resourceLocation": "[resourceGroup().location]",
        "vmVariable": {
            "storageAccountName": "[concat('sta', uniquestring(resourceGroup().id, parameters('vm').name), 'vm')]",
            "storageAccountType": "[parameters('vm').storageType]",
            "vmStorageAccountContainerName": "vhds",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageOffer": "WindowsServer",
            "imageSku": "[parameters('vm').OS]",
            "osDiskName": "[concat('osDisk','-',parameters('vm').name)]",
            "publicIPAddressName": "[concat('pip','-',parameters('vm').name)]",
            "publicIPAddressType": "Dynamic",
            "networkInterfaceName": "[concat('nic','-',parameters('vm').name)]",
            "vmSize": "[parameters('vm').vmSize]",
            "DataDisk": "ADDataDisk",
            "DataDiskSize": 1000
        },
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vm').virtualNetworkName)]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('vm').virtualNetworkSubnetName)]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion').network.publicIPAddresses]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('vmVariable').publicIPAddressName]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('vmVariable').publicIPAddressType]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion').network.networkInterfaces]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vmVariable').networkInterfaceName]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vmVariable').publicIPAddressName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "[variables('vmVariable').publicIPAddressType]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vmVariable').publicIPAddressName)]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion').compute.virtualMachines]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vm').name]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('vmVariable').networkInterfaceName)]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmVariable').vmSize]"
                },
                "osProfile": {
                    "computerName": "[parameters('vm').name]",
                    "adminUsername": "[parameters('vm').adminUsername]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmVariable').imagePublisher]",
                        "offer": "[variables('vmVariable').imageOffer]",
                        "sku": "[variables('vmVariable').imageSku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "[variables('vmVariable').osDiskName]",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmVariable').storageAccountType]"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vmVariable').networkInterfaceName)]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vm').name,'/Antivirus')]",
            "apiVersion": "[variables('apiVersion').compute.virtualMachines]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vm').name)]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Security",
                "type": "IaaSAntimalware",
                "typeHandlerVersion": "1.5",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "AntimalwareEnabled": "true",
                    "Exclusions": {
                        "Processes": "taskmgr.exe"
                    },
                    "RealtimeProtectionEnabled": "true",
                    "ScheduledScanSettings": {
                        "isEnabled": "true",
                        "scanType": "Quick",
                        "day": "7",
                        "time": "120"
                    }
                },
                "protectedSettings": null
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vm').name,'/Monitoring')]",
            "apiVersion": "[variables('apiVersion').management.monitoring]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vm').name)]"
            ],
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "MicrosoftMonitoringAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-03-20').customerId]"
                },
                "protectedSettings": {
                    "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-03-20').primarySharedKey]"
                }
            }
        }
    ]
}